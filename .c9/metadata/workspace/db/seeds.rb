{"filter":false,"title":"seeds.rb","tooltip":"/db/seeds.rb","undoManager":{"mark":1,"position":1,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["# This file should contain all the record creation needed to seed the database with its default values.","# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).","#","# Examples:","#","#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])","#   Mayor.create(name: 'Emanuel', city: cities.first)",""]},{"start":{"row":0,"column":0},"end":{"row":22,"column":3},"action":"insert","lines":["# This file should contain all the record creation needed to seed the database with its default values.","# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).","#","# Examples:","#","#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])","#   Mayor.create(name: 'Emanuel', city: cities.first)","","2.times do |i|","  Event.create(name: \"Event #{i + 1}\")","  3.times do |j|","    if Location.any?","      id = Location.last.id","    else","      id = 0","    end","    Location.create(","      name: \"Location #{id + 1} belongs to Event #{i + 1}\",","      tag: (('A'..'Z').to_a + ('a'..'z').to_a + (0..9).to_a).shuffle[0..7].join,","      event_id: i + 1","    )","  end","end"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":22,"column":3},"action":"remove","lines":["# This file should contain all the record creation needed to seed the database with its default values.","# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).","#","# Examples:","#","#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])","#   Mayor.create(name: 'Emanuel', city: cities.first)","","2.times do |i|","  Event.create(name: \"Event #{i + 1}\")","  3.times do |j|","    if Location.any?","      id = Location.last.id","    else","      id = 0","    end","    Location.create(","      name: \"Location #{id + 1} belongs to Event #{i + 1}\",","      tag: (('A'..'Z').to_a + ('a'..'z').to_a + (0..9).to_a).shuffle[0..7].join,","      event_id: i + 1","    )","  end","end"]},{"start":{"row":0,"column":0},"end":{"row":51,"column":3},"action":"insert","lines":["# This file should contain all the record creation needed to seed the database with its default values.","# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).","#","# Examples:","#","#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])","#   Mayor.create(name: 'Emanuel', city: cities.first)","","2.times do |e|","  # create two events","  Event.create(name: \"Event #{e + 1}\")","","  # for each event, create three locations","  3.times do |l|","    # grab the last id","    if Location.any?","      id = Location.last.id","    else # or initialize id to zero","      id = 0","    end","","    # create the location with the appropriate id and event_id","    Location.create(","      name: \"Location #{id + 1} belongs to Event #{e + 1}\",","      tag: (('A'..'Z').to_a + ('a'..'z').to_a + (0..9).to_a).shuffle[0..7].join,","      event_id: e + 1","    )","  end","","  # and create two participants","  2.times do |p|","    # grab the last id","    if Participant.any?","      id = Participant.last.id","    else # or initialize id to zero","      id = 0","    end","","    # create the participant with the appropriate id and event_id","    Participant.create(","      email: \"participant#{id + 1}@event#{e + 1}.com\",","      event_id: e + 1","    )","","    # update the join table, making sure we only ","    # associate participants and locations","    # that belong to the same event","    Location.where(event_id: e + 1).each do |l|","        l.participants << Participant.last","    end","  end","end"]}]}]]},"ace":{"folds":[],"scrolltop":321,"scrollleft":0,"selection":{"start":{"row":51,"column":3},"end":{"row":51,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":21,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1417746998362,"hash":"b0154a0393c83be7da897f948e25f803ecf24db7"}